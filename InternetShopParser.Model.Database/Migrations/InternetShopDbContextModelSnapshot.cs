// <auto-generated />
using System;
using InternetShopParser.Model.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace InternetShopParser.Model.Database.Migrations
{
    [DbContext(typeof(InternetShopDbContext))]
    partial class InternetShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("InternetShopParser.Model.Database.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Currency")
                        .HasMaxLength(20);

                    b.Property<DateTime>("DateCreate");

                    b.Property<string>("Descriptions");

                    b.Property<string>("ImageSource");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<decimal>("Price")
                        .HasColumnType("Money");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("InternetShopParser.Model.Database.Entities.ProductUpdetePrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateUpdate");

                    b.Property<decimal>("PriceUpdate")
                        .HasColumnType("Money");

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductUpdetePrices");
                });

            modelBuilder.Entity("InternetShopParser.Model.Database.Entities.ProductUpdetePrice", b =>
                {
                    b.HasOne("InternetShopParser.Model.Database.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
